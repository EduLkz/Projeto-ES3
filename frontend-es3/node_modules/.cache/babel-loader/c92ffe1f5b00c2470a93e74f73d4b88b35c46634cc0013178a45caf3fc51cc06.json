{"ast":null,"code":"var _jsxFileName = \"/mnt/3181cce5-74d7-427f-ba14-08accbd8ce5f/Code/ES3/frontend-es3/src/QRCodeReader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport QrScanner from 'qr-scanner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QRCodeReader() {\n  _s();\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [hasCamera, setHasCamera] = useState(true);\n  const [cameraActive, setCameraActive] = useState(false);\n  useEffect(() => {\n    QrScanner.hasCamera().then(hasCamera => {\n      setHasCamera(hasCamera);\n    });\n    return () => {\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n        qrScannerRef.current = null;\n      }\n    };\n  }, []);\n  const startScanner = () => {\n    if (!videoRef.current) return;\n    qrScannerRef.current = new QrScanner(videoRef.current, result => {\n      setResult(result.data);\n      qrScannerRef.current.stop();\n      setCameraActive(false);\n    }, {\n      preferredCamera: 'environment',\n      highlightScanRegion: true,\n      highlightCodeOutline: true,\n      maxScansPerSecond: 5\n    });\n    qrScannerRef.current.start().then(() => setCameraActive(true)).catch(err => {\n      console.error(err);\n      setHasCamera(false);\n    });\n  };\n  const stopScanner = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n      setCameraActive(false);\n    }\n  };\n  const toggleScanner = () => {\n    cameraActive ? stopScanner() : startScanner();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner-container\",\n    children: [!hasCamera ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhuma camera encontrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleScanner,\n        className: `scanner-button ${cameraActive ? 'stop-button' : 'start-button'}`,\n        children: cameraActive ? 'Parar leitura' : 'Iniciar Leitura'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setResult(''),\n        children: \"Limpar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(QRCodeReader, \"7VJMTI8fM8IWrsltohwyU3sbk0s=\");\n_c = QRCodeReader;\nvar _c;\n$RefreshReg$(_c, \"QRCodeReader\");","map":{"version":3,"names":["React","useEffect","useRef","useState","QrScanner","jsxDEV","_jsxDEV","Fragment","_Fragment","QRCodeReader","_s","videoRef","qrScannerRef","result","setResult","hasCamera","setHasCamera","cameraActive","setCameraActive","then","current","stop","destroy","startScanner","data","preferredCamera","highlightScanRegion","highlightCodeOutline","maxScansPerSecond","start","catch","err","console","error","stopScanner","toggleScanner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","playsInline","onClick","_c","$RefreshReg$"],"sources":["/mnt/3181cce5-74d7-427f-ba14-08accbd8ce5f/Code/ES3/frontend-es3/src/QRCodeReader.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport QrScanner from 'qr-scanner'\n\nexport default function QRCodeReader() {\n\n    const videoRef = useRef(null);\n    const qrScannerRef = useRef(null)\n\n    const [result, setResult] = useState('')\n\n    const [hasCamera, setHasCamera] = useState(true)\n    const [cameraActive, setCameraActive] = useState(false)\n\n    useEffect(() => {\n        QrScanner.hasCamera().then(hasCamera =>{\n            setHasCamera(hasCamera)\n        })\n\n        return () => {\n            if(qrScannerRef.current){\n                qrScannerRef.current.stop()\n                qrScannerRef.current.destroy()\n                qrScannerRef.current = null;\n            }\n        };\n    }, [])\n\n    const startScanner = () => {\n        if(!videoRef.current) return;\n\n        qrScannerRef.current = new QrScanner(\n            videoRef.current,\n            (result) => {\n                setResult(result.data)\n                qrScannerRef.current.stop()\n                setCameraActive(false)\n            },\n            {\n                preferredCamera: 'environment',\n                highlightScanRegion: true,\n                highlightCodeOutline: true,\n                maxScansPerSecond: 5\n            }\n        );\n\n        qrScannerRef.current.start()\n            .then(() => setCameraActive(true))\n            .catch((err) => {\n                console.error(err);\n                setHasCamera(false);\n            })\n    }\n\n    const stopScanner = () => {\n        if(qrScannerRef.current){\n            qrScannerRef.current.stop()\n            setCameraActive(false)\n        }\n    }\n\n    const toggleScanner = () => {\n        (cameraActive) ? stopScanner() : startScanner();\n    }\n\n  return (\n    <div className=\"qr-scanner-container\">\n\n        {!hasCamera ? (\n            <p>Nenhuma camera encontrada</p>\n        ) : (\n            <>\n                <div className='videoDiv'>\n                    <video ref={videoRef} playsInline className='video'/>\n                </div>\n\n                <button onClick={toggleScanner} \n                    className={`scanner-button ${cameraActive ? 'stop-button' : 'start-button'}`}>\n                    {cameraActive ? 'Parar leitura' : 'Iniciar Leitura'}\n                </button>\n            </>\n        )}\n\n        {result && (\n            <div>\n                <h2>Resultado:</h2>\n                <p>{ result }</p>\n                <button onClick={() => setResult('')}>\n                    Limpar\n                </button>\n            </div> \n        )}\n    </div>\n  )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}