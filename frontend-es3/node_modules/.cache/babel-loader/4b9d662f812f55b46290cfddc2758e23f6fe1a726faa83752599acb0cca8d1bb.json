{"ast":null,"code":"var _jsxFileName = \"/mnt/Main/Code/ES3/frontend-es3/src/DriverLogged.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCodeReader from './QRCodeReader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDriverCoord } from './slices/logSlice';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DriverLogged() {\n  _s();\n  const dispatch = useDispatch();\n  const [insertCord, setInsertCord] = useState(true);\n  const [inputCoord, setInputCoord] = useState('');\n  function getCoordenadas() {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocalização não suportada'));\n      }\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord));\n    if (!/^[-+]|[\\w]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord)) {\n      alert('Coordenadas não validas');\n      return;\n    }\n    dispatch(setDriverCoord([...driverCoord, inputCoord]));\n  };\n  const getRoute = async () => {\n    const pos = await getCoordenadas();\n    const {\n      latitude,\n      longitude\n    } = pos.coords;\n    const coord = [...driverCoord];\n    const body = {\n      origin: `${latitude}, ${longitude}`,\n      coords: coord\n    };\n    console.log(JSON.stringify(body));\n    axios.post('http://127.0.0.1:5000/gen-route', JSON.stringify(body), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n      window.open(res.data, '_blank', 'rel=noopener noreferrer');\n    }).catch(e => {\n      console.error(e.message);\n    });\n  };\n  const driverCoord = useSelector(state => state.isLogged.driverCoord);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addCoord\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setInsertCord(prevCheck => !prevCheck),\n      className: \"loginButtons\",\n      children: insertCord ? 'Ler QrCode' : 'Ler Coord'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: insertCord ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coord\",\n          children: \"Coordenadas \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          htmlFor: \"coord\",\n          onChange: e => setInputCoord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginButtons\",\n          onClick: handleSubmit,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(QRCodeReader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"coordTable\",\n      children: driverCoord.map((c, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"coord\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"coordIndex\",\n            children: [index, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", c, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: 0\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const copy = [...driverCoord];\n                copy.splice(index, 1);\n                console.log(copy);\n                dispatch(setDriverCoord(copy));\n              },\n              className: \"coordBtn\",\n              children: \" - \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 43\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"loginButtons\",\n      onClick: getRoute,\n      children: \"Gerar Rota\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DriverLogged, \"ACkPcAbkPsdqTPMj1VbjtYWD4pU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DriverLogged;\nvar _c;\n$RefreshReg$(_c, \"DriverLogged\");","map":{"version":3,"names":["React","useState","QRCodeReader","useSelector","useDispatch","setDriverCoord","axios","jsxDEV","_jsxDEV","DriverLogged","_s","dispatch","insertCord","setInsertCord","inputCoord","setInputCoord","getCoordenadas","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","handleSubmit","e","preventDefault","console","log","test","alert","driverCoord","getRoute","pos","latitude","longitude","coords","coord","body","origin","JSON","stringify","post","headers","then","res","data","window","open","catch","error","message","state","isLogged","className","children","onClick","prevCheck","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","target","value","map","c","index","style","padding","copy","splice","_c","$RefreshReg$"],"sources":["/mnt/Main/Code/ES3/frontend-es3/src/DriverLogged.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport QRCodeReader from './QRCodeReader'\nimport { useSelector, useDispatch} from 'react-redux';\nimport { setDriverCoord } from './slices/logSlice'\nimport axios from \"axios\";\n\nexport default function DriverLogged() {\n\n    const dispatch = useDispatch()\n    const [insertCord, setInsertCord] = useState(true);\n\n    const [inputCoord, setInputCoord] = useState('')\n\n    function getCoordenadas() {\n      return new Promise((resolve, reject) => {\n        if (!navigator.geolocation) {\n          reject(new Error('Geolocalização não suportada'));\n        }\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    }\n\n    const handleSubmit = async(e) => {\n      e.preventDefault();\n      console.log(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord))\n      if(!/^[-+]|[\\w]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord)){\n        alert('Coordenadas não validas');\n        return;\n      }\n      dispatch(setDriverCoord([...driverCoord, inputCoord]))\n\n      \n\n    }\n\n    const getRoute = async () => {\n      const pos = await getCoordenadas();\n      const { latitude, longitude } = pos.coords\n      const coord = [...driverCoord];\n      const body = {\n        origin: `${latitude}, ${longitude}`,\n        coords: coord\n      }\n\n      console.log(JSON.stringify(body))\n\n      axios.post('http://127.0.0.1:5000/gen-route', \n      JSON.stringify(body),\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then((res) => {\n        console.log(res.data)\n        window.open(res.data,'_blank', 'rel=noopener noreferrer')\n      }).catch((e) => {\n        console.error(e.message)\n      })\n    }\n\n    const driverCoord = useSelector(state => state.isLogged.driverCoord)\n\n  return (\n    <div className='addCoord'>\n        <button onClick={ () => setInsertCord(prevCheck => !prevCheck)} className='loginButtons'> \n          { (insertCord) ? 'Ler QrCode' : 'Ler Coord'} \n        </button>\n        <div>\n\n          { (insertCord) ? \n          <form>\n            <label htmlFor=\"coord\">Coordenadas </label>\n            <input htmlFor=\"coord\" onChange={(e) => setInputCoord(e.target.value)}/>\n            <button className='loginButtons' onClick={handleSubmit}>\n              Add\n            </button>\n          </form>\n          :\n            <QRCodeReader/>\n          }\n        </div>\n\n        <table className='coordTable'>\n        {\n          driverCoord.map((c, index) => {\n            return (\n              <tr className='coord' key={index}>\n                <td className='coordIndex'>{index} </td>\n                <td> {c} </td>\n                <td style={{padding: 0}}> <button onClick={() => {\n                  const copy = [...driverCoord];\n                  copy.splice(index, 1)\n                  console.log(copy)\n                  dispatch(setDriverCoord(copy))\n                }} className='coordBtn'> - </button> </td>\n              </tr>\n            )\n          })\n        }\n        </table>\n\n        <button className='loginButtons' onClick={getRoute}>\n          Gerar Rota\n        </button>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}