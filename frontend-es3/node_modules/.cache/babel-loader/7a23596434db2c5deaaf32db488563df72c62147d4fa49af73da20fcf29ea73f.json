{"ast":null,"code":"import React,{useState}from'react';import QRCodeReader from'./QRCodeReader';import{useSelector,useDispatch}from'react-redux';import{setDriverCoord}from'./slices/logSlice';import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function DriverLogged(){const dispatch=useDispatch();const[insertCord,setInsertCord]=useState(true);const[inputCoord,setInputCoord]=useState('');function getCoordenadas(){return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('Geolocalização não suportada'));}navigator.geolocation.getCurrentPosition(resolve,reject);});}const handleSubmit=async e=>{e.preventDefault();console.log(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord));if(!/^[-+]|[\\w]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord)){alert('Coordenadas não validas');return;}dispatch(setDriverCoord([...driverCoord,inputCoord]));};const getRoute=async()=>{const pos=await getCoordenadas();const{latitude,longitude}=pos.coords;const coord=[...driverCoord];const body={origin:\"\".concat(latitude,\", \").concat(longitude),coords:coord};console.log(JSON.stringify(body));axios.post('http://127.0.0.1:5000/gen-route',JSON.stringify(body),{headers:{'Content-Type':'application/json'}}).then(res=>{console.log(res.data);window.open(res.data,'_blank','rel=noopener noreferrer');}).catch(e=>{console.error(e.message);});};const driverCoord=useSelector(state=>state.isLogged.driverCoord);return/*#__PURE__*/_jsxs(\"div\",{className:\"addCoord\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setInsertCord(prevCheck=>!prevCheck),className:\"loginButtons\",children:insertCord?'Ler QrCode':'Ler Coord'}),/*#__PURE__*/_jsx(\"div\",{children:insertCord?/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"coord\",children:\"Coordenadas \"}),/*#__PURE__*/_jsx(\"input\",{htmlFor:\"coord\",onChange:e=>setInputCoord(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"loginButtons\",onClick:handleSubmit,children:\"Add\"})]}):/*#__PURE__*/_jsx(QRCodeReader,{})}),/*#__PURE__*/_jsx(\"table\",{className:\"coordTable\",children:driverCoord.map((c,index)=>{return/*#__PURE__*/_jsxs(\"tr\",{className:\"coord\",children:[/*#__PURE__*/_jsxs(\"td\",{className:\"coordIndex\",children:[index,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",c,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{style:{padding:0},children:[\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const copy=[...driverCoord];copy.splice(index,1);console.log(copy);dispatch(setDriverCoord(copy));},className:\"coordBtn\",children:\" - \"}),\" \"]})]},index);})}),/*#__PURE__*/_jsx(\"button\",{className:\"loginButtons\",onClick:getRoute,children:\"Gerar Rota\"})]});}","map":{"version":3,"names":["React","useState","QRCodeReader","useSelector","useDispatch","setDriverCoord","axios","jsx","_jsx","jsxs","_jsxs","DriverLogged","dispatch","insertCord","setInsertCord","inputCoord","setInputCoord","getCoordenadas","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","handleSubmit","e","preventDefault","console","log","test","alert","driverCoord","getRoute","pos","latitude","longitude","coords","coord","body","origin","concat","JSON","stringify","post","headers","then","res","data","window","open","catch","error","message","state","isLogged","className","children","onClick","prevCheck","htmlFor","onChange","target","value","map","c","index","style","padding","copy","splice"],"sources":["/mnt/Main/Code/ES3/frontend-es3/src/DriverLogged.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport QRCodeReader from './QRCodeReader'\nimport { useSelector, useDispatch} from 'react-redux';\nimport { setDriverCoord } from './slices/logSlice'\nimport axios from \"axios\";\n\nexport default function DriverLogged() {\n\n    const dispatch = useDispatch()\n    const [insertCord, setInsertCord] = useState(true);\n\n    const [inputCoord, setInputCoord] = useState('')\n\n    function getCoordenadas() {\n      return new Promise((resolve, reject) => {\n        if (!navigator.geolocation) {\n          reject(new Error('Geolocalização não suportada'));\n        }\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    }\n\n    const handleSubmit = async(e) => {\n      e.preventDefault();\n      console.log(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord))\n      if(!/^[-+]|[\\w]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/.test(inputCoord)){\n        alert('Coordenadas não validas');\n        return;\n      }\n      dispatch(setDriverCoord([...driverCoord, inputCoord]))\n\n      \n\n    }\n\n    const getRoute = async () => {\n      const pos = await getCoordenadas();\n      const { latitude, longitude } = pos.coords\n      const coord = [...driverCoord];\n      const body = {\n        origin: `${latitude}, ${longitude}`,\n        coords: coord\n      }\n\n      console.log(JSON.stringify(body))\n\n      axios.post('http://127.0.0.1:5000/gen-route', \n      JSON.stringify(body),\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then((res) => {\n        console.log(res.data)\n        window.open(res.data,'_blank', 'rel=noopener noreferrer')\n      }).catch((e) => {\n        console.error(e.message)\n      })\n    }\n\n    const driverCoord = useSelector(state => state.isLogged.driverCoord)\n\n  return (\n    <div className='addCoord'>\n        <button onClick={ () => setInsertCord(prevCheck => !prevCheck)} className='loginButtons'> \n          { (insertCord) ? 'Ler QrCode' : 'Ler Coord'} \n        </button>\n        <div>\n\n          { (insertCord) ? \n          <form>\n            <label htmlFor=\"coord\">Coordenadas </label>\n            <input htmlFor=\"coord\" onChange={(e) => setInputCoord(e.target.value)}/>\n            <button className='loginButtons' onClick={handleSubmit}>\n              Add\n            </button>\n          </form>\n          :\n            <QRCodeReader/>\n          }\n        </div>\n\n        <table className='coordTable'>\n        {\n          driverCoord.map((c, index) => {\n            return (\n              <tr className='coord' key={index}>\n                <td className='coordIndex'>{index} </td>\n                <td> {c} </td>\n                <td style={{padding: 0}}> <button onClick={() => {\n                  const copy = [...driverCoord];\n                  copy.splice(index, 1)\n                  console.log(copy)\n                  dispatch(setDriverCoord(copy))\n                }} className='coordBtn'> - </button> </td>\n              </tr>\n            )\n          })\n        }\n        </table>\n\n        <button className='loginButtons' onClick={getRoute}>\n          Gerar Rota\n        </button>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}